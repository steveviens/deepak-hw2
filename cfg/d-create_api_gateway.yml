AWSTemplateFormatVersion: "2010-09-09"
Description: 'Creates API Gateway for Homework #2'
Resources:
  # Source: https://nickolaskraus.org/articles/creating-an-amazon-api-gateway-with-a-lambda-integration-using-cloudformation/

  HW2RestAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: An api gateway with S3 service and lambda integrations
      Name: hw2-api-gateway
      ApiKeySourceType: HEADER
      EndpointConfiguration:
        Types:
        - REGIONAL
      Tags:
        - Key: project
          Value: hw2
        - Key: student
          Value: dd2676

  HW2RestAPISearchResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt HW2RestAPI.RootResourceId
      PathPart: 'search'
      RestApiId: !Ref HW2RestAPI

  HW2RestAPISearchMethodGET:
    Type: AWS::ApiGateway::Method
    Properties:
      OperationName: 'OpenSearch'
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        ConnectionType: INTERNET
        Credentials: !GetAtt HW2RestAPIIamRole.Arn
        IntegrationHttpMethod: GET
        PassthroughBehavior: WHEN_NO_MATCH
        TimeoutInMillis: 29000
        Type: AWS_PROXY
        #Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations'
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:677126791323:function:hw2_lambda_function3/invocations'
      ResourceId: !Ref HW2RestAPISearchResource
      RestApiId: !Ref HW2RestAPI

  HW2RestAPIUploadResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt HW2RestAPI.RootResourceId
      PathPart: 'upload'
      RestApiId: !Ref HW2RestAPI

  HW2RestAPIUploadMethodPOST:
    Type: AWS::ApiGateway::Method
    Properties:
      OperationName: 'UploadPicture'
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        ConnectionType: INTERNET
        Credentials: !GetAtt HW2RestAPIIamRole.Arn
        IntegrationHttpMethod: PUT
        PassthroughBehavior: WHEN_NO_MATCH
        TimeoutInMillis: 29000
        Type: AWS
        Uri: !Sub 'arn:aws:apigateway:us-east-1:s3:path/hw2-4321-photos/{object}'
      ResourceId: !Ref HW2RestAPIUploadResource
      RestApiId: !Ref HW2RestAPI

  HW2RestAPIModel:
    Type: AWS::ApiGateway::Model
    Properties:
      ContentType: 'application/json'
      RestApiId: !Ref HW2RestAPI
      Schema: {}

  HW2RestAPIStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref HW2RestAPIDeployment
      Description: Lambda API Stage v0
      RestApiId: !Ref HW2RestAPI
      StageName: 'v0'

  HW2RestAPIDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: HW2RestAPISearchMethodGET
    Properties:
      Description: Lambda API Deployment
      RestApiId: !Ref HW2RestAPI

  HW2RestAPIIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: 'Allow'
            Principal:
              Service:
                - 'apigateway.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      Policies:
      - PolicyName: LambdaAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: lambda:*
            Resource: arn:aws:lambda:*:*:*
